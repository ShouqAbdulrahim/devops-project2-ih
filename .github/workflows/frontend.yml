name: Frontend - Build & Deploy

on:
  workflow_dispatch:
  push:
    paths:
      - 'frontend/**'

jobs:
  build-deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: 'frontend/package-lock.json'

      - name: Install & Build
        working-directory: frontend
        env:
          CI: true
          NODE_ENV: production
        run: |
          if [ -f package-lock.json ]; then
            npm ci
          else
            npm install
          fi
          npm run build

      # ارفع المخرجات لمجلد مؤقت على السيرفر
      - name: Sync dist to Frontend VM (staging dir)
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.FRONTEND_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          # اختياري: port: 22
          source: "frontend/dist/*"
          target: "/home/${{ secrets.SSH_USER }}/deploy_dist/"
          # اختياري: rm: true  # يحذف الهدف قبل النسخ (حذرًا)

      # تحريك ذرّي + فحص Nginx
      - name: Move to /var/www/html and reload Nginx
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.FRONTEND_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            set -e
            sudo mkdir -p /var/www/html
            # انسخ إلى مجلد مؤقت ثم بدّل دفعة وحدة
            sudo rm -rf /var/www/html_new
            sudo mkdir -p /var/www/html_new
            sudo cp -r ~/deploy_dist/* /var/www/html_new/
            sudo mv /var/www/html /var/www/html_old || true
            sudo mv /var/www/html_new /var/www/html
            sudo nginx -t
            sudo systemctl reload nginx
            # تنظيف قديم اختياري
            sudo rm -rf /var/www/html_old || true
